name: .NET CI/CD with SonarQube

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Restore dependencies
        run: dotnet restore tempProjNew.sln

      - name: Build solution
        run: dotnet build tempProjNew.sln --configuration Release --no-restore

      - name: Install SonarScanner
        run: |
          dotnet tool install --global dotnet-sonarscanner
          export PATH="$PATH:~/.dotnet/tools"

      - name: Run SonarQube analysis
        run: dotnet sonarscanner begin /k:"tempProjNew" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" /d:sonar.cs.opencover.reportsPaths="TestResults/coverage.opencover.xml" /v:"1.0"

      - name: Build for SonarQube
        run: dotnet build tempProjNew.sln

      - name: Run tests with coverage
        run: |
          mkdir -p TestResults
          dotnet test tempProjNew.sln --no-restore --verbosity normal /p:CollectCoverage=true /p:CoverletOutput=TestResults/coverage.opencover.xml /p:CoverletOutputFormat=opencover

      - name: End SonarQube analysis
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: TestResults/coverage.opencover.xml
