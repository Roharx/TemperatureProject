{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.9.0.0",
        "fileVersion": "4.9.2-3.24171.17 (a7431003)",
        "semanticVersion": "4.9.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'value' in 'void Dictionary<string, object>.Add(string key, object value)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/service/Services/ActionLogger.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 40,
                  "endLine": 20,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/service/Interfaces/IHashService.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 43,
                  "endLine": 6,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/service/Services/CrudService.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 38,
                  "endLine": 83,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/service/Services/CrudService.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 38,
                  "endLine": 121,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/service/Services/CrudService.cs",
                "region": {
                  "startLine": 154,
                  "startColumn": 38,
                  "endLine": 154,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1854",
          "level": "note",
          "message": "Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check to avoid double lookup",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/service/Services/CrudService.cs",
                "region": {
                  "startLine": 131,
                  "startColumn": 21,
                  "endLine": 131,
                  "endColumn": 58
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/service/Services/CrudService.cs",
                "region": {
                  "startLine": 133,
                  "startColumn": 39,
                  "endLine": 133,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1854",
          "level": "note",
          "message": "Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check to avoid double lookup",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/service/Services/CrudService.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 22,
                  "endLine": 94,
                  "endColumn": 57
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/service/Services/CrudService.cs",
                "region": {
                  "startLine": 101,
                  "startColumn": 35,
                  "endLine": 101,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1854": {
          "id": "CA1854",
          "shortDescription": "Prefer the 'IDictionary.TryGetValue(TKey, out TValue)' method",
          "fullDescription": "Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check. 'ContainsKey' and the indexer both would lookup the key under the hood, so using 'TryGetValue' removes the extra lookup.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1854",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS8604": {
          "id": "CS8604",
          "shortDescription": "Possible null reference argument.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8604)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S1135": {
          "id": "S1135",
          "shortDescription": "Track uses of \"TODO\" tags",
          "fullDescription": "Developers often use TODO tags to mark areas in the code where additional work or improvements are needed but are not implemented immediately. However, these TODO tags sometimes get overlooked or forgotten, leading to incomplete or unfinished code. This code smell class aims to identify and address such unattended TODO tags to ensure a clean and maintainable codebase. This description will explore why this is a problem and how it can be fixed to improve the overall code quality.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1135",
          "properties": {
            "category": "Info Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}