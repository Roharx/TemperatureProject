{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.9.0.0",
        "fileVersion": "4.9.2-3.24171.17 (a7431003)",
        "semanticVersion": "4.9.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'BrokerUrl' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Config/MqttSettings.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 23,
                  "endLine": 5,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/api/Config/MqttSettings.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 23,
                  "endLine": 5,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'ClientId' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Config/MqttSettings.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 23,
                  "endLine": 7,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/api/Config/MqttSettings.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 23,
                  "endLine": 7,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Username' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Config/MqttSettings.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 23,
                  "endLine": 8,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/api/Config/MqttSettings.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 23,
                  "endLine": 8,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Password' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Config/MqttSettings.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 23,
                  "endLine": 9,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/api/Config/MqttSettings.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 23,
                  "endLine": 9,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Topic' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Config/MqttSettings.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 23,
                  "endLine": 10,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/api/Config/MqttSettings.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 23,
                  "endLine": 10,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Name' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/DTOs/Room/GetRoomDto.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 16,
                  "endLine": 5,
                  "endColumn": 26
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/api/DTOs/Room/GetRoomDto.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 23,
                  "endLine": 21,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Name' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/DTOs/Account/GetAccountDto.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 19,
                  "endLine": 8,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/api/DTOs/Account/GetAccountDto.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 19,
                  "endLine": 8,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Email' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/DTOs/Account/GetAccountDto.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 19,
                  "endLine": 9,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/api/DTOs/Account/GetAccountDto.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 19,
                  "endLine": 9,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Topic' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/DTOs/Mqtt/RoomSettingsDto.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 23,
                  "endLine": 10,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/api/DTOs/Mqtt/RoomSettingsDto.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 23,
                  "endLine": 10,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Name' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/DTOs/Account/GetAccountByNameDto.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 19,
                  "endLine": 5,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/api/DTOs/Account/GetAccountByNameDto.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 19,
                  "endLine": 5,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Email' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/DTOs/Account/GetAccountByEmailDto.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 19,
                  "endLine": 5,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/api/DTOs/Account/GetAccountByEmailDto.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 19,
                  "endLine": 5,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Source' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/DTOs/Room/DeviceMessageDto.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 19,
                  "endLine": 8,
                  "endColumn": 25
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/api/DTOs/Room/DeviceMessageDto.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 19,
                  "endLine": 8,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'MessageToClient' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/DTOs/ResponseDto.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 19,
                  "endLine": 5,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/api/DTOs/ResponseDto.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 19,
                  "endLine": 5,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Action' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/DTOs/LogTable/GetLogsDto.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 12,
                  "endLine": 5,
                  "endColumn": 22
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/api/DTOs/LogTable/GetLogsDto.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 19,
                  "endLine": 18,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'url' in 'bool GenericControllerBase<TService, TDto, TCreateDto, TUpdateDto>.IsUrlAllowed(string url)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Controllers/GenericControllerBase.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 50,
                  "endLine": 42,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8601",
          "level": "warning",
          "message": "Possible null reference assignment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Services/MqttService.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 29,
                  "endLine": 30,
                  "endColumn": 89
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Services/MqttService.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 13,
                  "endLine": 31,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8601",
          "level": "warning",
          "message": "Possible null reference assignment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Services/MqttService.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 38,
                  "endLine": 31,
                  "endColumn": 89
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Controllers/GenericControllerBase.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 34,
                  "endLine": 90,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8620",
          "level": "warning",
          "message": "Argument of type 'Dictionary<string, object?>' cannot be used for parameter 'accountData' of type 'Dictionary<string, object>' in 'int ICrudService.CreateAccount(Dictionary<string, object> accountData)' due to differences in the nullability of reference types.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Controllers/GenericControllerBase.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 71,
                  "endLine": 92,
                  "endColumn": 81
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8620",
          "level": "warning",
          "message": "Argument of type 'Dictionary<string, object?>' cannot be used for parameter 'parameters' of type 'Dictionary<string, object>' in 'int ICrudService.CreateItem<TDto>(string tableName, Dictionary<string, object> parameters)' due to differences in the nullability of reference types.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Controllers/GenericControllerBase.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 57,
                  "endLine": 93,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Controllers/GenericControllerBase.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 37,
                  "endLine": 104,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8620",
          "level": "warning",
          "message": "Argument of type 'Dictionary<string, object?>' cannot be used for parameter 'modifications' of type 'Dictionary<string, object>' in 'bool ICrudService.UpdateAccount(Dictionary<string, object> conditionColumns, Dictionary<string, object> modifications)' due to differences in the nullability of reference types.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Controllers/GenericControllerBase.cs",
                "region": {
                  "startLine": 108,
                  "startColumn": 89,
                  "endLine": 108,
                  "endColumn": 102
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8620",
          "level": "warning",
          "message": "Argument of type 'Dictionary<string, object?>' cannot be used for parameter 'modifications' of type 'Dictionary<string, object>' in 'bool ICrudService.UpdateItem(string tableName, Dictionary<string, object> conditionColumns, Dictionary<string, object> modifications)' due to differences in the nullability of reference types.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Controllers/GenericControllerBase.cs",
                "region": {
                  "startLine": 109,
                  "startColumn": 69,
                  "endLine": 109,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Controllers/GenericControllerBase.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 67,
                  "endLine": 39,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Config/Whitelist.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 14,
                  "endLine": 3,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3376",
          "level": "warning",
          "message": "Make this class name end with 'Attribute'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Filters/ValidateModel.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 14,
                  "endLine": 7,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_requestHandler' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Controllers/AccountOfficeController.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 37,
                  "endLine": 14,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_requestHandler' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Controllers/DeviceController.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 37,
                  "endLine": 14,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_requestHandler' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Controllers/LogsController.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 37,
                  "endLine": 14,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_requestHandler' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Controllers/OfficeController.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 37,
                  "endLine": 15,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_requestHandler' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Controllers/RoomController.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 37,
                  "endLine": 17,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_webSocketServer' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Controllers/MqttController.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 42,
                  "endLine": 18,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'GenericControllerBase' class to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Controllers/GenericControllerBase.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 18,
                  "endLine": 11,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_requestHandler' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Controllers/AccountController.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 41,
                  "endLine": 14,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3010",
          "level": "warning",
          "message": "Remove this assignment of 'Level' or initialize it statically.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Websockets/WebSocketServer.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 13,
                  "endLine": 15,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6605",
          "level": "warning",
          "message": "Collection-specific \"Exists\" method should be used instead of the \"Any\" extension.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Controllers/GenericControllerBase.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 42,
                  "endLine": 26,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1854",
          "level": "note",
          "message": "Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check to avoid double lookup",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Websockets/WebSocketServer.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 17,
                  "endLine": 83,
                  "endColumn": 55
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/api/Websockets/WebSocketServer.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 59,
                  "endLine": 83,
                  "endColumn": 85
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/api/Websockets/WebSocketServer.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 17,
                  "endLine": 85,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1854",
          "level": "note",
          "message": "Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check to avoid double lookup",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Websockets/WebSocketServer.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 18,
                  "endLine": 69,
                  "endColumn": 56
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/api/Websockets/WebSocketServer.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 18,
                  "endLine": 74,
                  "endColumn": 44
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/api/Websockets/WebSocketServer.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 17,
                  "endLine": 76,
                  "endColumn": 43
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/api/Websockets/WebSocketServer.cs",
                "region": {
                  "startLine": 71,
                  "startColumn": 17,
                  "endLine": 71,
                  "endColumn": 79
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified using the \"Where\" LINQ method",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Websockets/WebSocketServer.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 34,
                  "endLine": 114,
                  "endColumn": 64
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/api/Websockets/WebSocketServer.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 21,
                  "endLine": 116,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6608",
          "level": "warning",
          "message": "Indexing at Count-1 should be used instead of the \"Enumerable\" extension method \"Last\"",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Middleware/JwtMiddleware.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 91,
                  "endLine": 22,
                  "endColumn": 95
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "ASP0015",
          "level": "note",
          "message": "The header 'Authorization' can be accessed using the Authorization property",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Middleware/JwtMiddleware.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 21,
                  "endLine": 22,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderName": "Authorization",
              "ResolvedPropertyName": "Authorization"
            }
          }
        },
        {
          "ruleId": "CA1854",
          "level": "note",
          "message": "Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check to avoid double lookup",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Websockets/WebSocketServer.cs",
                "region": {
                  "startLine": 129,
                  "startColumn": 17,
                  "endLine": 129,
                  "endColumn": 55
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/api/Websockets/WebSocketServer.cs",
                "region": {
                  "startLine": 131,
                  "startColumn": 40,
                  "endLine": 131,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1868",
          "level": "note",
          "message": "Do not guard 'List.Remove(IWebSocketConnection)' with 'List.Contains(IWebSocketConnection)'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Websockets/WebSocketServer.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 21,
                  "endLine": 116,
                  "endColumn": 60
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/api/Websockets/WebSocketServer.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 17,
                  "endLine": 123,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/api/Websockets/WebSocketServer.cs",
                "region": {
                  "startLine": 118,
                  "startColumn": 21,
                  "endLine": 118,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1854",
          "level": "note",
          "message": "Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check to avoid double lookup",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Websockets/WebSocketServer.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 17,
                  "endLine": 96,
                  "endColumn": 55
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/api/Websockets/WebSocketServer.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 59,
                  "endLine": 96,
                  "endColumn": 85
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/tempProjNew/api/Websockets/WebSocketServer.cs",
                "region": {
                  "startLine": 98,
                  "startColumn": 40,
                  "endLine": 98,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Websockets/WebSocketServer.cs",
                "region": {
                  "startLine": 119,
                  "startColumn": 26,
                  "endLine": 119,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this unused method parameter 'context'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Middleware/WebSocketMiddleware.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 45,
                  "endLine": 34,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "True"
            }
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Services/MqttService.cs",
                "region": {
                  "startLine": 159,
                  "startColumn": 36,
                  "endLine": 159,
                  "endColumn": 84
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4792",
          "level": "warning",
          "message": "Make sure that this logger's configuration is safe.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Program.cs",
                "region": {
                  "startLine": 111,
                  "startColumn": 1,
                  "endLine": 111,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Services/MqttService.cs",
                "region": {
                  "startLine": 165,
                  "startColumn": 36,
                  "endLine": 165,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogError(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Services/MqttService.cs",
                "region": {
                  "startLine": 108,
                  "startColumn": 34,
                  "endLine": 108,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Services/MqttService.cs",
                "region": {
                  "startLine": 171,
                  "startColumn": 36,
                  "endLine": 171,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Services/MqttService.cs",
                "region": {
                  "startLine": 140,
                  "startColumn": 27,
                  "endLine": 140,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogError(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Services/MqttService.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 34,
                  "endLine": 147,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Middleware/WebSocketMiddleware.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 36,
                  "endLine": 42,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Services/MqttService.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 40,
                  "endLine": 62,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.NullReferenceException' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Program.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 47,
                  "endLine": 70,
                  "endColumn": 99
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1861",
          "level": "note",
          "message": "Prefer 'static readonly' fields over constant array arguments if the called method is called repeatedly and is not mutating the passed array",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/tempProjNew/api/Program.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 13,
                  "endLine": 106,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "paramName": "value"
            }
          }
        }
      ],
      "rules": {
        "ASP0015": {
          "id": "ASP0015",
          "shortDescription": "Suggest using IHeaderDictionary properties",
          "defaultLevel": "note",
          "helpUri": "https://aka.ms/aspnet/analyzers",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true
          }
        },
        "CA1854": {
          "id": "CA1854",
          "shortDescription": "Prefer the 'IDictionary.TryGetValue(TKey, out TValue)' method",
          "fullDescription": "Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check. 'ContainsKey' and the indexer both would lookup the key under the hood, so using 'TryGetValue' removes the extra lookup.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1854",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1860": {
          "id": "CA1860",
          "shortDescription": "Avoid using 'Enumerable.Any()' extension method",
          "fullDescription": "Prefer using 'IsEmpty', 'Count' or 'Length' properties whichever available, rather than calling 'Enumerable.Any()'. The intent is clearer and it is more performant than using 'Enumerable.Any()' extension method.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1860",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1861": {
          "id": "CA1861",
          "shortDescription": "Avoid constant arrays as arguments",
          "fullDescription": "Constant arrays passed as arguments are not reused when called repeatedly, which implies a new array is created each time. Consider extracting them to 'static readonly' fields to improve performance if the passed array is not mutated within the called method.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1861",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1868": {
          "id": "CA1868",
          "shortDescription": "Unnecessary call to 'Contains(item)'",
          "fullDescription": "Do not guard 'Add(item)' or 'Remove(item)' with 'Contains(item)' for the set. The former two already check whether the item exists and will return if it was added or removed.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1868",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA2254": {
          "id": "CA2254",
          "shortDescription": "Template should be a static expression",
          "fullDescription": "The logging message template should not vary between calls.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2254",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS8601": {
          "id": "CS8601",
          "shortDescription": "Possible null reference assignment.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8601)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8602": {
          "id": "CS8602",
          "shortDescription": "Dereference of a possibly null reference.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8602)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8604": {
          "id": "CS8604",
          "shortDescription": "Possible null reference argument.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8604)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8618": {
          "id": "CS8618",
          "shortDescription": "Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8618)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8620": {
          "id": "CS8620",
          "shortDescription": "Argument cannot be used for parameter due to differences in the nullability of reference types.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8620)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S1118": {
          "id": "S1118",
          "shortDescription": "Utility classes should not have public constructors",
          "fullDescription": "Whenever there are portions of code that are duplicated and do not depend on the state of their container class, they can be centralized inside a \"utility class\". A utility class is a class that only has static members, hence it should not be instantiated.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1118",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S112": {
          "id": "S112",
          "shortDescription": "General or reserved exceptions should never be thrown",
          "fullDescription": "This rule raises an issue when a general or reserved exception is thrown.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-112",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1135": {
          "id": "S1135",
          "shortDescription": "Track uses of \"TODO\" tags",
          "fullDescription": "Developers often use TODO tags to mark areas in the code where additional work or improvements are needed but are not implemented immediately. However, these TODO tags sometimes get overlooked or forgotten, leading to incomplete or unfinished code. This code smell class aims to identify and address such unattended TODO tags to ensure a clean and maintainable codebase. This description will explore why this is a problem and how it can be fixed to improve the overall code quality.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1135",
          "properties": {
            "category": "Info Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1172": {
          "id": "S1172",
          "shortDescription": "Unused method parameters should be removed",
          "fullDescription": "A typical code smell known as unused function parameters refers to parameters declared in a function but not used anywhere within the function’s body. While this might seem harmless at first glance, it can lead to confusion and potential errors in your code. Disregarding the values passed to such parameters, the function’s behavior will be the same, but the programmer’s intention won’t be clearly expressed anymore. Therefore, removing function parameters that are not being utilized is considered best practice.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1172",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2436": {
          "id": "S2436",
          "shortDescription": "Types and methods should not have too many generic parameters",
          "fullDescription": "A method or class with too many type parameters has likely aggregated too many responsibilities and should be split.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2436",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3010": {
          "id": "S3010",
          "shortDescription": "Static fields should not be updated in constructors",
          "fullDescription": "Assigning a value to a static field in a constructor could cause unreliable behavior at runtime since it will change the value for all instances of the class.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3010",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3267": {
          "id": "S3267",
          "shortDescription": "Loops should be simplified with \"LINQ\" expressions",
          "fullDescription": "When a loop is filtering, selecting or aggregating, those functions can be handled with a clearer, more concise LINQ expression instead.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3267",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3376": {
          "id": "S3376",
          "shortDescription": "Attribute, EventArgs, and Exception type names should end with the type being extended",
          "fullDescription": "Adherence to the standard naming conventions makes your code not only more readable, but more usable. For instance, class FirstAttribute : Attribute can be used simply with First, but you must use the full name for class AttributeOne : Attribute.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3376",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4487": {
          "id": "S4487",
          "shortDescription": "Unread \"private\" fields should be removed",
          "fullDescription": "Private fields which are written but never read are a case of \"dead store\". Changing the value of such a field is useless and most probably indicates an error in the code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4487",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4792": {
          "id": "S4792",
          "shortDescription": "Configuring loggers is security-sensitive",
          "fullDescription": "Configuring loggers is security-sensitive. It has led in the past to the following vulnerabilities:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4792",
          "properties": {
            "category": "Critical Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6605": {
          "id": "S6605",
          "shortDescription": "Collection-specific \"Exists\" method should be used instead of the \"Any\" extension",
          "fullDescription": "Both the List.Exists method and IEnumerable.Any method can be used to find the first element that satisfies a predicate in a collection. However, List.Exists can be faster than IEnumerable.Any for List objects, as well as requires significantly less memory. For small collections, the performance difference may be negligible, but for large collections, it can be noticeable. The same applies to ImmutableList and arrays too.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6605",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6608": {
          "id": "S6608",
          "shortDescription": "Prefer indexing instead of \"Enumerable\" methods on types implementing \"IList\"",
          "fullDescription": "Indexes in C# provide direct access to an element at a specific position within an array or collection. When compared to Enumerable methods, indexing can be more efficient for certain scenarios, such as iterating over a large collection, due to avoiding the overhead of checking the underlying collection type before accessing it.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6608",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}